// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	corev1 "k8s.io/api/core/v1"

	mock "github.com/stretchr/testify/mock"

	time "time"

	v1 "github.com/kyma-project/infrastructure-manager/api/v1"
)

// Metrics is an autogenerated mock type for the Metrics type
type Metrics struct {
	mock.Mock
}

// CleanUpGardenerClusterGauge provides a mock function with given fields: runtimeID
func (_m *Metrics) CleanUpGardenerClusterGauge(runtimeID string) {
	_m.Called(runtimeID)
}

// CleanUpKubeconfigExpiration provides a mock function with given fields: runtimeID
func (_m *Metrics) CleanUpKubeconfigExpiration(runtimeID string) {
	_m.Called(runtimeID)
}

// CleanUpPendingStateDuration provides a mock function with given fields: runtimeName
func (_m *Metrics) CleanUpPendingStateDuration(runtimeName string) {
	_m.Called(runtimeName)
}

// CleanUpRuntimeGauge provides a mock function with given fields: runtimeID, runtimeName
func (_m *Metrics) CleanUpRuntimeGauge(runtimeID string, runtimeName string) {
	_m.Called(runtimeID, runtimeName)
}

// IncRuntimeFSMStopCounter provides a mock function with no fields
func (_m *Metrics) IncRuntimeFSMStopCounter() {
	_m.Called()
}

// ResetRuntimeMetrics provides a mock function with no fields
func (_m *Metrics) ResetRuntimeMetrics() {
	_m.Called()
}

// SetGardenerClusterStates provides a mock function with given fields: cluster
func (_m *Metrics) SetGardenerClusterStates(cluster v1.GardenerCluster) {
	_m.Called(cluster)
}

// SetKubeconfigExpiration provides a mock function with given fields: secret, rotationPeriod, minimalRotationTimeRatio
func (_m *Metrics) SetKubeconfigExpiration(secret corev1.Secret, rotationPeriod time.Duration, minimalRotationTimeRatio float64) {
	_m.Called(secret, rotationPeriod, minimalRotationTimeRatio)
}

// SetPendingStateDuration provides a mock function with given fields: operation, runtime
func (_m *Metrics) SetPendingStateDuration(operation string, runtime v1.Runtime) {
	_m.Called(operation, runtime)
}

// SetRuntimeStates provides a mock function with given fields: runtime
func (_m *Metrics) SetRuntimeStates(runtime v1.Runtime) {
	_m.Called(runtime)
}

// NewMetrics creates a new instance of Metrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *Metrics {
	mock := &Metrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
